(define (square-tree-1 tree)
    (cond 
        ((null? tree) '())
        ((pair? tree)
            (cons (square-tree-1 (car tree)) (square-tree-1 (cdr tree))))
        (else (square tree))))
(define (square-tree-2 tree)
    (map (lambda (tree) 
                (if (pair? tree)
                    (square-tree-2 tree)
                    (square tree)))
        tree))
(define tree (list 1 (list 2 (list 3 4) 5) (list 6 7)))
(square-tree-1 tree)
(square-tree-2 tree)